import { AuthenticationService } from '../authentication/authentication.service';
import { EnvironmentService } from '../environment/environment.service';
import * as types from './models';
/**
 * Expose Fleek APIs.
 */
export declare class ApiService {
    private authenticationService;
    private environmentService;
    constructor(authenticationService: AuthenticationService, environmentService: EnvironmentService);
    private request;
    /**
     * Return the list of sites in a given team.
     * @param teamId Id of the team.
     */
    getSitesByTeam(teamId: string): Promise<types.Site[]>;
    createSite(input: types.AddSiteInput): Promise<types.Site>;
    getFullSite(teamId: string, siteId: string): Promise<types.FullSite>;
    updateDeploySettings(teamId: string, siteId: string, settings: types.DeploySettingsInput): Promise<types.Site>;
    deploySite(teamId: string, siteId: string, hash?: string): Promise<types.Deploy>;
}
export default ApiService;
