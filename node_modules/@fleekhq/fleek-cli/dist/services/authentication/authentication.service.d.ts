import { DatabaseService, SessionInformation } from '../database/database.service';
import { EnvironmentService } from '../environment/environment.service';
import { GraphQLRequestService } from '../graphql-request/graphql-request.service';
export declare class AuthenticationService {
    private databaseService;
    private graphqlService;
    private environmentService;
    constructor(databaseService: DatabaseService, graphqlService: GraphQLRequestService, environmentService: EnvironmentService);
    /**
     * Logout
     */
    logout(): Promise<void>;
    loginThroughBrowser(): Promise<void>;
    /**
     * Returns the current user from the db
     */
    whoAmI(): Promise<SessionInformation>;
    getTeamApiKey(teamId: string): Promise<string>;
    /**
     * This updates the authentication token
     * @param tokens The current tokens obtained through the OIDC flow
     */
    private updateApiKeysInDb;
    private setupTeams;
    private getMemberships;
    private generateAppApiKey;
    private static openWindow;
    private static receiveOidcResponse;
}
export default AuthenticationService;
